<apex:page standardController="Purchase_Invoice__c" extensions="EditPurchaseInvoice" title="Edit Purchase Invoice" sidebar="0" id="pgNewInvoicePage">
<script type="text/javascript" src="/js/functions.js"></script>
	<script src="/soap/ajax/9.0/connection.js"></script>
	<script src="/soap/ajax/9.0/apex.js"></script>
	<script type="text/javascript">
    var __sfdcSessionId = '{!GETSESSIONID()}';
    </script>
    <script src="../../soap/ajax/21.0/connection.js"
          type="text/javascript">
</script>
<link rel="stylesheet" type="text/css" href="ZumzumFinacials.css" />
<apex:stylesheet value="{!URLFOR($Resource.ajaxWaitIndicatorZip,'ajaxWaitIndicator_css.css')}"></apex:stylesheet>
<apex:includeScript value="{!URLFOR($Resource.ajaxWaitIndicatorZip, 'ajaxWaitIndicator.js')}"/> 
<apex:stylesheet value="{!$Resource.ZZFinancialsCSS}"/>
	<apex:pagemessages id="errorMessage" />
	<apex:form id="frmMainForm" rendered="{!allowEdit}">
		<c:AutoCompleteNomCodes autocomplete_textbox="lookup" selectedvalue_textbox="hiddenId" nominalCode_textbox="relatedName" />
		<apex:pageblock id="PurchaseOrderinfo" title="Edit Purchase Invoice">
			<apex:pageBlockSection columns="1">
				<apex:pageblockSectionItem >
					<apex:outputText value="Placed By" />
					<apex:outputText value="{!$User.FirstName} {!$User.LastName}" />
				</apex:pageblockSectionItem>
				<apex:pageblockSectionItem >
					<apex:outputLabel for="grd">Supplier Name</apex:outputLabel>
					<apex:panelgrid columns="2" id="AccName">
						<apex:panelgroup >
							<div class="requiredInput">
							<div class="requiredBlock"></div>
								<apex:inputField Id="Account" value="{!POInvoiceInfo.Account__c}" >
									<apex:actionSupport event="onchange" action="{!DueDate}" rerender="frmMainForm,errorMessage"  oncomplete="getAccountTax();"/>
								</apex:inputField>
							</div>
						</apex:panelgroup>
					</apex:panelgrid>
				</apex:pageblockSectionItem>
				<apex:pageblockSectionItem >
                    <apex:outputLabel for="grd">Invoice Date:</apex:outputLabel>
					<apex:panelgrid columns="2" id="AccName">
						<apex:panelgroup >
							<div class="requiredInput">
							<div class="requiredBlock"></div>
								<apex:inputField Id="OrderDate" value="{!POInvoiceInfo.Invoice_Date__c}"  >
									<apex:actionSupport event="onchange" action="{!DueDate}" rerender="frmMainForm,errorMessage" />
								</apex:inputField>
							</div>
						</apex:panelgroup>
					</apex:panelgrid>
                </apex:pageblockSectionItem>
				<apex:pageblockSectionItem >       
                    <apex:outputLabel for="grd">Invoice Due Date:</apex:outputLabel>
					<apex:panelgrid columns="2" id="AccName">
						<apex:panelgroup >
							<div class="requiredInput">
							<div class="requiredBlock"></div>
								 <apex:inputField Id="dtDueDate" value="{!POInvoiceInfo.Invoice_Due_Date__c}" />
							</div>
						</apex:panelgroup>
					</apex:panelgrid>
                </apex:pageblockSectionItem>
				<apex:pageblockSectionItem >   
					<apex:outputLabel for="grd">PO/Reference Number:</apex:outputLabel>
					<apex:panelgrid columns="2" id="AccName">
						<apex:panelgroup >
							<apex:inputField Id="CusOrder" value="{!POInvoiceInfo.POP_Number__c}" />
						</apex:panelgroup>
					</apex:panelgrid>    
                </apex:pageblockSectionItem>
				<apex:pageblockSectionItem >
				<apex:outputLabel for="grd">Purchase Invoice Type:</apex:outputLabel>
					<apex:panelgrid columns="2" id="AccName">
						<apex:panelgroup >
							<div class="requiredInput">
							<div class="requiredBlock"></div>
								 <apex:inputField Id="CusOrder" value="{!POInvoiceInfo.Type__c}" />
							</div>
						</apex:panelgroup>
					</apex:panelgrid> 
                </apex:pageblockSectionItem>
                <apex:pageblockSectionItem >
                    Dimension:
                    <apex:inputField Id="CusOrder"
						value="{!POInvoiceInfo.Dimension__c}"/>
				</apex:pageblockSectionItem>
                <apex:pageblockSectionItem >
					Invoice Template: <apex:outputpanel > 
				<div class="requiredInput">
				<div class="requiredBlock"></div>
				<apex:selectlist value="{!POInvoiceInfo.Invoice_Template__c}" size="1">
					<apex:selectoptions value="{!AllTemplates}" />
				</apex:selectlist>
				</div>				
				</apex:outputpanel>
			</apex:pageblockSectionItem>
			<apex:pageblockSectionItem >   
					<apex:outputLabel for="grd">Settlement Discount %:</apex:outputLabel>
					<apex:panelgrid columns="2" id="AccName">
						<apex:panelgroup >
								 <apex:inputField Id="txtSettlementDiscount" value="{!POInvoiceInfo.Settlement_Discount__c}" />
						</apex:panelgroup>
					</apex:panelgrid>    
            </apex:pageblockSectionItem>
            			<apex:pageblockSectionItem >   
					<apex:outputLabel for="grd">Settlement due days:</apex:outputLabel>
					<apex:panelgrid columns="2" id="AccName">
						<apex:panelgroup >
							<apex:inputField Id="txtSettlementDays" value="{!POInvoiceInfo.Settlement_due_days__c}" />
						</apex:panelgroup>
					</apex:panelgrid>    
            </apex:pageblockSectionItem>
            <!-- 
            <apex:pageblockSectionItem >   
					<apex:outputLabel for="grd">Invoice Status:</apex:outputLabel>
					<apex:panelgrid columns="2" id="AccName">
						<apex:panelgroup >
							<div class="requiredInput">
							<div class="requiredBlock"></div>
								 <apex:inputField Id="lstInvoiceStatus" value="{!POInvoiceInfo.Status__c}" />
							</div>
						</apex:panelgroup>
					</apex:panelgrid>    
            </apex:pageblockSectionItem>
             -->    
			</apex:pageBlockSection>
			<apex:pageblockbuttons location="top">
				<apex:commandbutton value="Save" action="{!savePOI}"  onclick="setBunload(false);"/>
				<apex:commandbutton value="Cancel" action="{!cancel}"  onclick="setBunload(false);"/>
			</apex:pageblockbuttons>
		</apex:pageblock>
		<apex:pageblock id="purchaseOrderLineItems" title="Purchase Invoice Line Items">
			<table width="100%" border="1" class="grid">
				<tr>
					<td align="left" width="25"><b>S.No</b></td>
					<td align="left" width="42"><b>N/C</b></td>
					<td align="left" width="127"><b>N/C Name</b></td>
					<td align="left"><b>Narrative</b></td>
					<td align="left" width="42" align="right"><b>Qty</b></td>
					<td align="left" width="72" colspan="2" align="right"><b>Price</b></td>
					<td align="left" width="50"><b>T/C</b></td>
					<td align="left" width="70" align="right"><b>Tax Rate</b></td>
					<td align="left" width="72" colspan="2" align="right"><b>Tax</b></td>
					<td align="left" width="72" colspan="2" align="right"><b>Net</b></td>
					<td align="left" width="72" colspan="2" align="right"><b>Gross</b></td>
					<td align="left" width="72"><b>Ready To Pay</b></td>
					<td align="left" width="152"><b>Opportunity</b></td>
					<td align="left" width="80"><b>Options</b></td>
			  </tr>
                
				<tr>
					<td align="left" width="25"><b><apex:inputHidden value="{!ecsRates}" id="isECSCountry" /></b></td>
					<td width="42"><div class="requiredInput">
				      <div class="requiredBlock"></div>
				      	<input type="text" class="lookupField" id="lookup" value="{!htmlNcId}" /></div>
				      	<input type="hidden" id="hiddenId" />
				      	<apex:inputHidden value="{!hdnNcId}" id="hiddenId" />
				     </td>
					<td width="127">
						<input type="text" class="lookupName" id="relatedName" readonly="readonly" value="{!ncName}"/></td>
					<td><div class="requiredInput">
				      <div class="requiredBlock"></div>
				      	<apex:inputTextarea id="Narrative" value="{!InvoiceDetails.purchaseInvoiceLineItems.Narrative__c}" cols="35" rows="3" />
				      	<!-- <textarea name="Narrative0" cols="35" rows="3" class="detailTxtArea"></textarea> -->
				      </div>
				    </td>
					<td width="42"><div class="requiredInput">
				      <div class="requiredBlock">
				      </div>
				        <apex:inputfield styleclass="currency" value="{!InvoiceDetails.purchaseInvoiceLineItems.Quantity__c}" id="Quantity" onchange="getTotalValues();"/>
				      </div>
				    </td>
					<td style="border:none;width:10px;">{!currencySymbol}</td>
					<td align="right" width="72"><div class="requiredInput">
				      <div class="requiredBlock">
				      </div>
				      	<apex:inputfield styleclass="currency" value="{!InvoiceDetails.purchaseInvoiceLineItems.Amount__c}" id="Amount" onchange="changeAllTotals();"/>
				      </div>
				    </td>
					<td width="50"><div class="requiredInput">
				      <div class="requiredBlock">
				      </div>
				      <apex:selectlist id="TaxRate" value="{!InvoiceDetails.purchaseInvoiceLineItems.Tax_Rate__c}" size="1">
					      <apex:selectoptions value="{!AllTaxes}" />
					      <apex:actionsupport event="onchange" action="{!selectedTax}" rerender="frmMainForm" onsubmit="Mask.show();" oncomplete="Mask.hide();"/>
                      	  	<input value = "{!tax_rate}" id = "TaxRateValue" type = "hidden" />
					  </apex:selectlist>
						</div>
					</td>
					<td align="right" width="70">
						<!--<input type="text" class="numeric" id="cTaxRate" value = "{!tax_rate}" style="text-align: right;" readonly="readonly" />-->
						<apex:outputtext value="{0, number, 0.00}" styleclass="numeric" id="cTaxRate" style="width:50px;">
				            <apex:param value="{!tax_rate}" />
				    	</apex:outputtext>
					</td>
					<td style="border:none;width:10px;">{!currencySymbol}</td>
					<td align="right" width="72">
						<input type="text" class="currency" id="TaxAmount" value = "{!InvoiceDetails.totalTax}" readonly="readonly" src="25" />
					</td>
					<td style="border:none;width:10px;">{!currencySymbol}</td>
					<td align="right" width="72">
						<input type="text" class="currency" id="TotalAmount" value = "{!InvoiceDetails.totalNet}" readonly="readonly" src="25" />
					</td>
					<td style="border:none;width:10px;">{!currencySymbol}</td>
					<td align="right" width="72">
						<input type="text" class="currency" id="TotalGrossAmount" value = "{!InvoiceDetails.totalAmount}" readonly="readonly" src="25" />
					</td>
					<td align="right" width="72">
						<apex:inputCheckbox styleclass="currency" id="readyToPay" value="{!InvoiceDetails.purchaseInvoiceLineItems.Ready_To_Pay__c}" />
					</td>
					<td width="152"><span class="textarea"> 
						<!-- 
						<apex:selectlist value="{!InvoiceDetails.purchaseInvoiceLineItems.Opportunity__c}" size="1"  style="width:150px;">
							<apex:selectoptions value="{!AllProjects}" />
				        </apex:selectlist>
				         -->
				         <apex:inputfield value="{!InvoiceDetails.purchaseInvoiceLineItems.Opportunity__c}" />
				    </span>
				    </td>
					<td width="80" align="center">
						<apex:commandbutton value="Add" onClick="assignNCID ();Mask.show();" onComplete="Mask.hide();" action="{!addproductnewproductitem}" style="width:65px; font-size:10px;" rerender="frmMainForm,errorMessage"  />
						<apex:commandbutton value="Cancel" style="width:65px; font-size:10px;" />
                		<apex:commandbutton onclick="getNetAmount();"  rerender="errorMessages" value="Calc. Net" style="width:65px; font-size:10px;" />
					</td>
			  </tr>
                <tr align="center">
					<td width="100" colspan="15">&nbsp;</td>
				</tr>
				<apex:repeat value="{!InvoiceDetailsList}" var="o" >
				<tr>
					<td align="right" width="25"><b>{!o.serialNumber}</b></td>
					<td width="42">{!o.NominalCode}</td>
					<td width="127">{!o.NominalAccount}</td>
					<td>{!o.purchaseInvoiceLineItems.Narrative__c}</td>
					<td width="42" align="right">
						<apex:outputtext value="{0, number, integer}"  >
				            <apex:param value="{!o.purchaseInvoiceLineItems.Quantity__c}" />
				    	</apex:outputtext>
					</td>
					<td align="right" width="72" align="right" colspan="2">
						{!currencySymbol}
						<apex:outputtext value="{0, number, 0.00}"  >
				            <apex:param value="{!o.purchaseInvoiceLineItems.Amount__c}" />
				    	</apex:outputtext>	
					</td>
					<td align="right" width="70">{!o.strTaxRate}</td>
					<td align="right" width="50">
						<apex:outputtext value="{0, number, 0.00}"  style="width:50px;">
				            <apex:param value="{!o.taxRate}" />
				    	</apex:outputtext>
					</td>
					<td align="right" width="72" colspan="2">
						{!currencySymbol}
						<apex:outputtext value="{0, number, 0.00}"  >
					            	<apex:param value="{!o.purchaseInvoiceLineItems.Total_VAT__c}" />
					    </apex:outputtext>	
					</td>
					<td align="right" width="72" colspan="2">{!currencySymbol} {!o.totalNet}</td>
					<td align="right" width="72" colspan="2">
						{!currencySymbol}
						<apex:outputtext value="{0, number, 0.00}"  >
					          <apex:param value="{!o.purchaseInvoiceLineItems.Total_Gross__c}" />
					    </apex:outputtext>
					</td>
					<td align="center" width="72">
						<apex:inputCheckbox value="{!o.purchaseInvoiceLineItems.Ready_To_Pay__c}" disabled="true"/>
					</td>
					<td width="152">
						<apex:outputfield value="{!o.purchaseInvoiceLineItems.Opportunity__c}" />
					</td>
					<td width="80" align="center">
						<apex:commandLink value="Edit" action="{!editLineItem}" rerender="frmMainForm,errorMessage">
                            <apex:param name="editId" value="{!o.serialNumber}"/>
						</apex:commandLink>&nbsp;&nbsp;&nbsp;
						<apex:commandLink value="Delete" action="{!deletLineItem}" onclick="return confirmDelete();" >
							<apex:param name="deleteId" value="{!o.serialNumber}"/>
						</apex:commandLink>
					</td>
			    </tr>
			    </apex:repeat>
				<tr>
					<td width="25">&nbsp;</td>
					<td width="42">&nbsp;</td>
					<td width="127">&nbsp;</td>
					<td>&nbsp;</td>
					<td width="42">&nbsp;</td>
					<td align="right" width="72" colspan="2">&nbsp;</td>
					<td width="50">&nbsp;</td>
					<td width="70">&nbsp;</td>
					<td align="right" width="72" colspan="2">
						<b>
							{!currencySymbol}
							<apex:outputtext value="{0, number, 0.00}"  >
				            	<apex:param value="{!totalTax}" />
				        	</apex:outputtext>
						</b>
					</td>
					<td align="right" width="72" colspan="2">
						<b>
							{!currencySymbol}
							<apex:outputtext value="{0, number, 0.00}"  >
				            	<apex:param value="{!wtAmount}" />
				        	</apex:outputtext>							
						</b>
					</td>
					<td width="152" align="right" colspan="2">
						<b>
							{!currencySymbol}
							<apex:outputtext value="{0, number, 0.00}"  >
				            	<apex:param value="{!PoAmount}" />
				        	</apex:outputtext>							
						</b>
					</td>
					<td width="80" align="center">&nbsp;</td>
					<td width="80" align="center">&nbsp;</td>
					<td width="80" align="center">&nbsp;</td>
			  </tr>
				
			</table>
		</apex:pageblock>
		<table width="100%" >
			<tr>
				<td align="right"><strong>Total Excl. VAT: </strong></td>
				<td width="100" align="right">
					{!currencySymbol}
					<apex:outputtext value="{0, number, 0.00}" id="TotalNet" >
					     	<apex:param value="{!wtAmount}" />
					</apex:outputtext>
				</td>
			</tr>
			<tr>
				<td align="right"><strong>Total VAT: </strong></td>
				<td width="100" align="right">
					{!currencySymbol}
					<apex:outputtext value="{0, number, 0.00}" id="TotalVAT" >
					     	<apex:param value="{!totalTax}" />
					</apex:outputtext>
				</td>
			</tr>
			<tr>
				<td align="right"><strong>Total
				Amount: </strong></td>
				<td width="100" align="right">
					{!currencySymbol}
					<apex:outputtext value="{0, number, 0.00}"  id="TotalAmount">
					     	<apex:param value="{!PoAmount}" />
					</apex:outputtext>
				</td>
			</tr>
		</table>
	</apex:form>
	<script type="text/javascript" >
		var alreadyExist = false;
		function assignNCID ()
		{
			try
			{
				if(document.getElementById('hiddenId').value == '' || document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:hiddenId').value == '' )
				{
					var NcCode = document.getElementById('lookup').value ; 
					result = sforce.connection.query("select Id from Nominal_Account__c where Nominal_Code__c = '"+NcCode+"'");
					records = result.getArray("records");
					document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:hiddenId').value = records[0].Id ;
				}
			}
			catch(err)
			{
				//alert(err );
			}
		}
		function getTotalValues()
		{
			var nominalId = document.getElementById('hiddenId').value ;
			document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:hiddenId').value = nominalId ;
			//alert('this is nc id: ' + document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:hiddenId').value);
			if (document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:TaxRate').value == null || document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:TaxRate').value == '')
			{
				//alert('this is Id: ' + nominalId + '& no tAx rate selected'); // 
				getTaxRate(nominalId) ;
				changeAllTotals();
			}
			else
			{
				//alert('this is Id: ' + nominalId + '& tAx rate selected'); //
				
			} 
		}
		function getTaxRate(nominalAccountId)
		{
			// start of API Call code
			result = sforce.connection.query("select Tax_Rate__c from Nominal_Account__c where Id = '"+nominalAccountId+"'");
			//alert('this is records: ' + result.getArray("records"));
			if (result.getArray("records") == '' || result.getArray("records") == null)
			{
				document.getElementById('TaxRateValue').value = 0.00;
				return ;	
			}
			records = result.getArray("records");
			
			//for (var i=0; i< records.length; i++) 
			//{
    			var record = records[0];
    			if (record.Tax_Rate__c == null  || record.Tax_Rate__c =='')
    			{
    				//alert('no tax rate defined for this Nominal Account');   
    				//document.getElementById('TaxRateValue').value = 0.00;
    			}
    			else
    			{
    				//alert(record.Tax_Rate__c);
    				taxRate = sforce.connection.query("select id , Tax_Rate__c from Tax_Rate__c where Id = '"+record.Tax_Rate__c+"'");
    				//alert('this is tax rate: ' + taxRate['records'].Tax_Rate__c) ;	
    				document.getElementById('TaxRateValue').value = Number(taxRate['records'].Tax_Rate__c);
    				//alert('this is tax id: ' + taxRate['records'].Id);
    				document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:cTaxRate').innerHTML = Number(taxRate['records'].Tax_Rate__c).toFixed(2);
    				document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:TaxRate').value = taxRate['records'].Id ;
    			}
  			//}
  			// end of API code
		}
		function changeAllTotals()
		{
			//alert ('this is in all totals');
			var taxamount = Number(document.getElementById('TaxAmount').value) ;
			var rate  = Number(document.getElementById('TaxRateValue').value);
			document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:cTaxRate').value = rate.toFixed(2);
			var amount = Number(document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:Amount').value.replace(",","")) ;
			taxamount = (amount/100)*rate;
			var quantity  = Number(document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:Quantity').value);
			amount = Number(amount);
			taxamount = Number(taxamount) * quantity;
			var totalamount = (amount * quantity ) + taxamount ;
			taxamount = roundNumber(taxamount,2); 
			totalamount = roundNumber(totalamount,2);
			document.getElementById('TaxAmount').value = taxamount.toFixed(2) ;   //taxamount ;
			document.getElementById('TotalAmount').value = (amount * quantity).toFixed(2) ;
			document.getElementById('TotalGrossAmount').value =  (taxamount+(amount * quantity)).toFixed(2);
		}
		function roundNumber(num, dec) 
		{
			var result = Math.round(num*Math.pow(10,dec))/Math.pow(10,dec);
			return result;
		}
		// on exit warning code
		function unloadMessage()
		{
	        //message = "Wait! You haven't finished."
	        message = "Your Purchase Invoice Information is not Saved yet!\n Are you sure you to exit?";
	        return message;
	    }
	    function setBunload(on)
	    {
	        window.onbeforeunload = (on) ? unloadMessage : null;
	    }
	    setBunload(true);
	    // end of warningn code
	    // Confirm on Delete Code
	    function confirmDelete()
		{
			var confirmdelete = confirm("Are you Sure to delete this Entry ?");
			if (confirmdelete == false)
			{
				return false;
			} 
			setBunload(false);
		}
	    // end of code
	    // Get invoice due date
	    function getDueDate(accountName)
	    {
	    	//alert(accountName);
	    	//if(accountName == null || accountName == '')
	    	//{
	    		//alert('Please Select Account to ')
	    	//}
	    	result = sforce.connection.query("select Payment_Due_Days__c from Account where Name = '"+accountName+"'");
	    	records = result.getArray("records");
	    	if (records[0].Payment_Due_Days__c == null  || records[0].Payment_Due_Days__c == '')
	    	{	
	    		alert('Payment Date is Not Defined for this Account');
	    		return ;
	    	}
	    	var orderDate = document.getElementById('pgNewInvoicePage:frmMainForm:PurchaseOrderinfo:j_id38:j_id48:OrderDate').value ; 
	    	//alert('this is due date: ' + orderDate ) ;
	    	if ( orderDate == '' || orderDate == null )
	    	{
	    		alert('Please Enter Order Date');
	    		return ;
	    	}
	    	var dueDate = new Date(document.getElementById('pgNewInvoicePage:frmMainForm:PurchaseOrderinfo:j_id38:j_id48:OrderDate').value);
	    	dueDate = dueDate.setDate(dueDate.getDate()+Number(records[0].Payment_Due_Days__c));
	    	var nwDate = new Date(dueDate) ;
	    	//alert('this is due dat: ----- ' + nwDate.getDate() + '/' + nwDate.getMonth() + '/' + nwDate.getFullYear());
	    	var duedateMonth = nwDate.getMonth()+1 ;
	    	if(duedateMonth > 12)
	    		var duedateMonth = 1 ;	
	    	document.getElementById('pgNewInvoicePage:frmMainForm:PurchaseOrderinfo:j_id38:j_id54:dtDueDate').value = duedateMonth+'/'+nwDate.getDate()+'/'+nwDate.getFullYear() ;
	    }
	    function getDueDateChanges()
	    {
	    	//alert(accountName);
	    	//if(accountName == null || accountName == '')
	    	//{
	    		//alert('Please Select Account to ')
	    	//}
	    	var accountName = document.getElementById('pgNewInvoicePage:frmMainForm:PurchaseOrderinfo:j_id38:j_id42:Account').value ; 
	    	result = sforce.connection.query("select Payment_Due_Days__c from Account where Name = '"+accountName+"'");
	    	records = result.getArray("records");
	    	if (records[0].Payment_Due_Days__c == null  || records[0].Payment_Due_Days__c == '')
	    		alert('Payment Date is Not Defined for this Account');
	    	if (records[0].Payment_Due_Days__c == null  || records[0].Payment_Due_Days__c == '')
	    	{	
	    		alert('Payment Date is Not Defined for this Account');
	    		return ;
	    	}
	    	var orderDate = document.getElementById('pgNewInvoicePage:frmMainForm:PurchaseOrderinfo:j_id38:j_id48:OrderDate').value ; 
	    	//alert('this is due date: ' + orderDate ) ;
	    	if ( orderDate == '' || orderDate == null )
	    	{
	    		alert('Please Enter Order Date');
	    		return ;
	    	}
	    	var dueDate = new Date(document.getElementById('pgNewInvoicePage:frmMainForm:PurchaseOrderinfo:j_id38:j_id48:OrderDate').value);
	    	dueDate = dueDate.setDate(dueDate.getDate()+Number(records[0].Payment_Due_Days__c));
	    	var nwDate = new Date(dueDate) ;
	    	//alert('this is due dat: ----- ' + nwDate.getDate() + '/' + nwDate.getMonth() + '/' + nwDate.getFullYear());
	    	var duedateMonth = nwDate.getMonth()+1 ;
	    	if(duedateMonth > 12)
	    		var duedateMonth = 1 ;	
	    	document.getElementById('pgNewInvoicePage:frmMainForm:PurchaseOrderinfo:j_id38:j_id54:dtDueDate').value = duedateMonth+'/'+nwDate.getDate()+'/'+nwDate.getFullYear() ;
	    }
	    // end of code
	    
	    function getAccountTax(AccountName)
	    {
	    	var AccountName = document.getElementById("pgNewInvoicePage:frmMainForm:PurchaseOrderinfo:j_id38:j_id42:Account").value;
	    	countryName = sforce.connection.query("Select Tax_Rate__c , Tax_Rate__r.Name , Tax_Rate__r.Tax_Rate__c  , Country__c from Account where Name = '"+AccountName+"'");
	    	countryName = countryName.getArray("records");	    	
	    	var optTaxRates = document.getElementById("pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:TaxRate");
	    	if(countryName[0].Tax_Rate__c !=null)
	    	{
	    		optTaxRates.value = countryName[0].Tax_Rate__c ;
	    	}
	    	else
	    	{ 
	    		taxRateName = sforce.connection.query("select Id , Tax_Rate__c , is_default__c from Tax_Rate__c where is_default__c = true");
		    	taxRateName = taxRateName.getArray("records");		    
		    	optTaxRates.value = taxRateName[0].Id ;		    	
	    	}
	    }
	    function getNetAmount()
		{			
			//alert('calculating Net Amount');				
			var GAmount = Number(document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:Amount').value.replace(",","")) ;
			//alert('GAmount:'+GAmount);
			//alert('Tax:'+document.getElementById('TaxRateValue'));
			var TaxRate = Number(document.getElementById('TaxRateValue').value.replace(",","")) ;
			//alert('TaxRate:'+TaxRate);
			var Quantity = Number(document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:Quantity').value.replace(",","")) ;
			//alert('Quantity:'+Quantity);			
			var TaxAmount = (GAmount * TaxRate)/(100 + TaxRate) ;			
			var tmpNetAmount = ( GAmount - TaxAmount)*Quantity ;
			TaxAmount = (TaxAmount * Quantity).toFixed(2); ;
			tmpNetAmount = roundNumber(tmpNetAmount,2).toFixed(2);
			//alert('calculating Net Amount 2');
			document.getElementById('TaxAmount').value = TaxAmount ; 
			document.getElementById('pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:Amount').value = roundNumber((tmpNetAmount/Quantity) , 2).toFixed(2);			
			document.getElementById('TotalAmount').value = ((GAmount * Quantity )-TaxAmount).toFixed(2) ;
			document.getElementById('TotalGrossAmount').value =  (GAmount * Quantity ).toFixed(2) ;
			//alert('calculating Net Amount 3');
		}
	    
	    
	    
	    // This code finds account country & List Tax Rates for that coutry
	    function getCountryRegion(AccountName)
	    {
	    	//alert(AccountName);
	    	countryName = sforce.connection.query("Select Country__c from Account where Name = '"+AccountName+"'");
	    	countryName = countryName.getArray("records");
	    	countryName = countryName[0].Country__c ;
	    	//alert(countryName);
	    	result = sforce.connection.query("Select Country_Name__c , Country_Code__c , Region__c from ISO_Countries__c ");
	    	//alert('this is countries list: ' + result ) ;
	    	records = result.getArray("records");
	    	//alert("this is copuntry code: " + records[0].Country_Name__c) ;
	    	for (var i=0; i< records.length; i++) 
	    	{
	    		//alert("this is copuntry code: " + records[i].Country_Name__c) ;
	    		if(records[i].Country_Name__c == countryName)
	    		{	
	    			//alert('this is your region : ' + records[i].Region__c + ' This is your Coutry Code : ' + records[i].Country_Code__c)	;
	    			if(records[i].Region__c == 'Europe' && countryName != 'UNITED KINGDOM')
	    				getECSTaxes() ;
	    			else
	    				getALLTaxes() ;	
	    		}
	    	}
	    }
	    function getECSTaxes()
	    {
	    	//alert('i am a ESC country');
	    	result = sforce.connection.query("Select is_no_tax__c, is_EC_Sales__c, Tax_Rate__c, Name, Id From Tax_Rate__c where is_EC_Sales__c = true Order By Name Asc");
	    	records = result.getArray("records");
	    	//alert(records);
	    	var optTaxRates = document.getElementById("pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:TaxRate");
	    	optTaxRates.options.length = 0;
	    	optTaxRates.options[optTaxRates.options.length] = new Option('Select Tax Rate' , '' );
	    	document.getElementById("pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:isECSCountry").value = true ;
	    	for (var i=0; i< records.length; i++) 
	    	{
	    		//alert(records[i].Name);
	    		optTaxRates.options[optTaxRates.options.length] = new Option(Number(records[i].Tax_Rate__c).toFixed(2) + '% ' + records[i].Name , records[i].Id);
	    	}
	    }
	    function getALLTaxes()
	    {
	    	//alert('i am a ESC country');
	    	result = sforce.connection.query("Select is_no_tax__c, is_EC_Sales__c, Tax_Rate__c, Name, Id From Tax_Rate__c Order By Name Asc");
	    	records = result.getArray("records");
	    	//alert(records);
	    	var optTaxRates = document.getElementById("pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:TaxRate");
	    	optTaxRates.options.length = 0;
	    	optTaxRates.options[optTaxRates.options.length] = new Option('Select Tax Rate' , '' );
	    	document.getElementById("pgNewInvoicePage:frmMainForm:purchaseOrderLineItems:isECSCountry").value = false ;
	    	for (var i=0; i< records.length; i++) 
	    	{
	    		//alert(records[i].Name);
	    		optTaxRates.options[optTaxRates.options.length] = new Option(Number(records[i].Tax_Rate__c).toFixed(2) + '% ' + records[i].Name , records[i].Id);
	    	}
	    }
	    // end of code
	</script>
	<apex:form id="frmBack" rendered="{!allowEdit==false}">
		<script type="text/javascript" src="{!URLFOR($Resource.jsGlobalFunctions)}"></script>
		<iframe  onload="getWarningOff();" width="0"  height="0">
		</iframe >
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<apex:commandbutton action="{!back}" value="Back to Purchase Invoice"  />
	</apex:form>
</apex:page>